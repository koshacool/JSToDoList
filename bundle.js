!function(t){var n={};function c(s){if(n[s])return n[s].exports;var l=n[s]={i:s,l:!1,exports:{}};return t[s].call(l.exports,l,l.exports,c),l.l=!0,l.exports}c.m=t,c.c=n,c.d=function(t,n,s){c.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:s})},c.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},c.t=function(t,n){if(1&n&&(t=c(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(c.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var l in t)c.d(s,l,function(n){return t[n]}.bind(null,l));return s},c.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return c.d(n,"a",n),n},c.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},c.p="",c(c.s=0)}([function(t,n,c){t.exports=c(2)},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguc2Nzcz9iYjY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/localStorageService.js\nconst TASKS_DB_NAME = 'localstorageTasks';\n\nclass LocalStorageService {\n  constructor () {\n    let tasks = JSON.parse(localStorage.getItem(TASKS_DB_NAME));\n\n    if (!tasks) {\n      tasks = [];\n      localStorage.setItem(TASKS_DB_NAME, JSON.stringify(tasks));\n    }\n\n    this.tasks = tasks;\n  }\n\n  get () {\n    return JSON.parse(localStorage.getItem(TASKS_DB_NAME));\n  }\n\n  set (data) {\n    return localStorage.setItem(TASKS_DB_NAME, JSON.stringify(data));\n  }\n\n  clear () {\n    localStorage.setItem(TASKS_DB_NAME, JSON.stringify([]));\n  }\n}\n\nconst storageService = new LocalStorageService();\n\n/* harmony default export */ var localStorageService = (storageService);\n\n// CONCATENATED MODULE: ./src/utils.js\nconst generateId = () => Math.random().toString(36).substr(2, 9);\n\nconst capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst countActiveTasks = tasks => tasks.reduce(\n  (prev, { status }) => status !== 'completed' ? prev + 1 : prev, 0);\n\nconst debounce = (func, delay = 500) => {\n  let timerId;\n\n  return data => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(() => func(data), delay);\n  };\n};\n\n// CONCATENATED MODULE: ./src/task.js\n\n\n\nconst taskSchema = {\n  id: {\n    type: 'string',\n  },\n\n  title: {\n    type: 'string',\n    isRequired: true,\n  },\n\n  type: {\n    type: 'string',\n    isRequired: true,\n  },\n\n  description: {\n    type: 'string',\n    isRequired: true,\n  },\n\n  status: {\n    type: 'string',\n  },\n};\n\nconst task_TASKS_DB_NAME = 'localstorageTasks';\n\nclass task_Task {\n  constructor ({ id, title, type, description, status = 'opened' }) {\n    this.taskObj = {\n      id: id || generateId(),\n      title,\n      type,\n      description,\n      status,\n    };\n\n    this.saveAction = id ? 'update' : 'create';\n  }\n\n  save () {\n    const tasks = JSON.parse(localStorage.getItem(task_TASKS_DB_NAME));\n    const result = this.validate();\n    const task = { ...this.taskObj };\n\n    if (result.error)  {\n      return result;\n    }\n\n    if (this.saveAction === 'create') {\n      tasks.push(task);    \n    } else {\n      const taskIndex = tasks.findIndex(({ id }) => id === task.id);\n\n      tasks[taskIndex] = task;\n    }\n\n    \n    localStorage.setItem(task_TASKS_DB_NAME, JSON.stringify(tasks));\n\n    return { task };\n  }\n\n  static validateField (name, value) {\n    if (\n      (taskSchema[name].isRequired && !value.trim())\n      || typeof value !== taskSchema[name].type\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  validate () {\n    const validationResult = {\n      notValidFields: {},\n    };\n\n    Object.keys(taskSchema).forEach(fieldName => {\n      const isValid = task_Task.validateField(fieldName, this.taskObj[fieldName]);\n\n      validationResult.notValidFields[fieldName] = isValid;\n\n      if (!isValid) {\n        validationResult.error = true;\n      }\n    });\n\n    return validationResult;\n  }\n}\n\n/* harmony default export */ var src_task = (task_Task);\n\n// CONCATENATED MODULE: ./src/modal.js\n\n\n\nconst ERROR_CLASS_NAME = 'validation-error';\nconst taskTypes = {\n  learning: 'learning',\n  shopping: 'shopping',\n  traveling: 'traveling',\n  sport: 'sport',\n};\n\nclass modal_FormModal {\n  constructor () {\n    this.$rootComponent = null;\n\n    this.initModal = this.initModal.bind(this);\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.saveForm = this.saveForm.bind(this);\n    this.createTaskForm = this.createTaskForm.bind(this);\n    this.onInputKeyUp = this.onInputKeyUp.bind(this);\n\n    this.initModal();\n    this.initEventListeners();\n  }\n\n  initModal () {\n    const $mainBlock = document.getElementById('app');\n    const $modal = document.createElement('div');\n\n    $modal.className = 'modal';\n    $modal.id = 'form-modal';\n    $modal.innerHTML = `\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <span id=\"modal-close\" class=\"close\">&times;</span>\n          <h2 id=\"modal-title\" class=\"modal-title\">Modal title</h2>\n        </div>\n        <div id=\"modal-body\" class=\"modal-body\"></div>\n        <div class=\"modal-footer\">\n          <button id=\"form-modal-save\" class=\"button\">Save</button>\n        </div>\n      </div>\n  `;\n\n    $mainBlock.appendChild($modal);\n\n    this.$rootComponent = document.getElementById('form-modal');\n  }\n\n  initEventListeners () {\n    const $closeButton = document.getElementById('modal-close');\n    const $saveButton = document.getElementById('form-modal-save');\n\n    $closeButton.addEventListener('click', this.close);\n    $saveButton.addEventListener('click', this.saveForm);\n  }\n\n  createTaskForm ({ id = '', title = '', type = '', description = '', status = '' }) {\n    const $modalBody = document.getElementById('modal-body');\n    const $formBlock = document.createElement('form');\n\n    $formBlock.className = 'task-form';\n    $formBlock.id = 'task-form';\n\n    $formBlock.innerHTML = `\n      <div class=\"form-group\">\n        <label for=\"title\"><i class=\"fa fa-car\"></i> Title</label>\n        <input type=\"text\" class=\"form-input\" id=\"title\" \n          name=\"title\" placeholder=\"Enter title\" value=${title}>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\"><i class=\"fa fa-car\"></i> Description</label>\n        <textarea rows=\"4\" cols=\"100\" name=\"description\" form=\"task-form\" \n          name=\"description\" id=\"description\">\n          ${description}\n        </textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"type\"><i class=\"fa fa-car\"></i> Task Type</label>\n        <select class=\"form-control\" id=\"type\" name=\"type\" value=${type}>\n          <option selected=${taskTypes.learning === type} value=${taskTypes.learning}>\n            ${taskTypes.learning}\n           </option>\n          <option selected=${taskTypes.shopping === type} value=${taskTypes.shopping}>\n            ${taskTypes.shopping}\n          </option>\n          <option selected=${taskTypes.traveling === type} value=${taskTypes.traveling}>\n            ${taskTypes.traveling}\n          </option>\n          <option selected=${taskTypes.sport === type} value=${taskTypes.sport}>\n            ${taskTypes.sport}\n          </option>\n        </select>\n       </div>\n    `;\n\n    if (id) {\n      const $idInput = document.createElement('input');\n\n      $idInput.type = 'hidden';\n      $idInput.className = 'task-id';\n      $idInput.setAttribute('value', id);\n      $idInput.setAttribute('name', 'id');\n\n      $formBlock.appendChild($idInput);\n    }\n\n    if (status) {\n      const $statusInput = document.createElement('input');\n\n      $statusInput.type = 'hidden';\n      $statusInput.className = 'task-status';\n      $statusInput.setAttribute('value', status);\n      $statusInput.setAttribute('name', 'status');\n\n      $formBlock.appendChild($statusInput);\n    }\n\n    if ($modalBody.hasChildNodes()) {\n      $modalBody.firstChild.replaceWith($formBlock);\n    } else {\n      $modalBody.appendChild($formBlock);\n    }\n\n    const formInputs = document.getElementById('task-form').elements;\n\n    for (let i = 0; i < formInputs.length; i++) {\n      formInputs[i].addEventListener('keyup', this.onInputKeyUp);\n    }\n  }\n\n  open (callback,  data = {}) {\n    this.callback = callback;\n    const $modalTitle = document.getElementById('modal-title');\n\n    if (data.id) {\n      $modalTitle.innerHTML = 'Edit Task';\n    } else {\n      $modalTitle.innerHTML = 'Create Task';\n    }\n\n    this.createTaskForm(data);\n\n    this.$rootComponent.style.display = 'block';\n  }\n\n  close () {\n    this.callback = null;\n    this.$rootComponent.style.display = 'none';\n  }\n\n  saveForm () {\n    const taskData = {};\n    const formInputs = document.getElementById('task-form').elements;\n\n    for (let i = 0; i < formInputs.length; i++) {\n      const { name, value } = formInputs[i];\n      taskData[name] = value;\n    }\n\n    const task = new src_task(taskData);\n    const { error, notValidFields, task: newTask } = task.save();\n\n    if (!error) {\n      this.callback && this.callback(newTask);\n      this.close();\n    } else {\n      for (let i = 0; i < formInputs.length; i++) {\n        const { name } = formInputs[i];\n\n        this.highlightInput(formInputs[i], notValidFields[name]);\n      }\n    }\n  }\n\n  onInputKeyUp ({ target }) {\n    const { name, value } = target;\n    const isValid = src_task.validateField(name, value);\n\n    this.highlightInput(target, isValid);\n  }\n\n  highlightInput ($input, isValid) {\n    if (!isValid) {\n      $input.className = `${$input.className} ${ERROR_CLASS_NAME}`;\n      return;\n    }\n\n    $input.classList.remove(ERROR_CLASS_NAME);\n  }\n\n}\n\nconst modalController = new modal_FormModal();\n\n/* harmony default export */ var modal = (modalController);\n\n// CONCATENATED MODULE: ./src/main.js\n\n\n\n\n\nconst mainActionsBlockId = 'main-page__actions';\nconst addButtonClass = 'add-task';\nconst finishAllButtonClass = 'finish-all-tasks';\nconst removeAllButtonClass = 'remove-all-tasks';\n\n// Filters buttons\nconst taskTypeSelectId = 'filters__task-type';\nconst inputFilterId = 'filters__search';\nconst filterButtonsBlockId = 'filters__buttons';\nconst filterButtonsClasses = {\n  all: 'all',\n  opened: 'opened',\n  completed: 'completed',\n};\n\nconst listBlockId = 'tasks-list';\n\nclass main_TaskList {\n  constructor (tasks) {\n    this.tasks = tasks;\n\n    this.filtersState = {\n      status: filterButtonsClasses.all,\n      type: 'all',\n      text: '',\n    };\n\n    this.initCommonStructure();\n\n    this.$mainActionsBlock = document.getElementById(mainActionsBlockId);\n    this.$taskTypeSelect = document.getElementById(taskTypeSelectId);\n    this.$inputFilter = document.getElementById(inputFilterId);\n    this.$filterButtonsBlock = document.getElementById(filterButtonsBlockId);\n    this.$listBlock = document.getElementById(listBlockId);\n    this.$taskCount = document.getElementById('tasks-count');\n\n    this.onClickFilterButtons = this.onClickFilterButtons.bind(this);\n    this.onChangeType = this.onChangeType.bind(this);\n    this.onInput = this.onInput.bind(this);\n    this.renderTasks = this.renderTasks.bind(this);\n    this.onTaskChange = this.onTaskChange.bind(this);\n    this.onCreateTask = this.onCreateTask.bind(this);\n\n    this.onEditTask = this.onEditTask.bind(this);\n    this.onClickMainActions = this.onClickMainActions.bind(this);\n    this.onClickFilterButtons = this.onClickFilterButtons.bind(this);\n\n    this.renderTasks(this.tasks);\n    this.initEventListeners();\n  }\n\n  initCommonStructure () {\n    const { status } = this.filtersState;\n    const $mainBlock = document.getElementById('app');\n    const $taskList = document.createElement('div');\n\n    $taskList.className = 'task-list-container';\n    $taskList.id = 'task-list-container';\n    $taskList.innerHTML = `\n      <div id=${mainActionsBlockId} class=${mainActionsBlockId}>\n\t\t<button class=\"button ${addButtonClass}\">Add</button>\n\t\t<button class=\"button ${finishAllButtonClass}\">Finish all</button>\n\t\t<button class=\"button ${removeAllButtonClass}\">Remove all</button>\n\t</div>\n\n\t<div class=\"filters\">\n\t\t<div class=\"filters__types\">\n\t\t\t<select class=\"task-types\" id=${taskTypeSelectId} name=\"type\">\n          <option value=\"all\">\n            all\n          </option>\n          <option value=\"learning\">\n          \tlearning\n          </option>\n          <option value=\"shopping\">\n            shopping\n          </option>\n          <option value=\"traveling\">\n            traveling\n          </option>\n          <option value=\"sport\">\n            sport\n          </option>\n        </select>\n        \t<span id=\"tasks-count\" class=\"tasks-count\">${this.tasks.length} Tasks left</span>\n\t\t</div>\n\n\t\t<div id=${filterButtonsBlockId} class=${filterButtonsBlockId}>\n\t\t\t<button class=\"button ${filterButtonsClasses.all} \n          ${status === filterButtonsClasses.all ? 'active' : ''}\"\n      >All</button>\n\t\t\t<button class=\"button ${filterButtonsClasses.opened} \n          ${status === filterButtonsClasses.opened ? 'active' : ''}\"\n      >Opened</button>\n\t\t\t<button class=\"button ${filterButtonsClasses.completed} \n        ${status === filterButtonsClasses.completed ? 'active' : ''}\"\n      >Completed</button>\n\t\t</div>\n\t</div>\n\n\t<input class=\"search\" placeholder=\"search\" id=${inputFilterId}>\n\n\t<div class=${listBlockId} id=${listBlockId}>\n\t\n  </div>\n  `;\n\n    $mainBlock.appendChild($taskList);\n  }\n\n  initEventListeners () {\n    this.$mainActionsBlock.addEventListener('click', this.onClickMainActions);\n    this.$filterButtonsBlock.addEventListener('click',\n      this.onClickFilterButtons);\n    this.$taskTypeSelect.addEventListener('change', this.onChangeType);\n    this.$inputFilter.addEventListener('keyup', debounce(this.onInput));\n    this.$listBlock.addEventListener('click', this.onTaskChange);\n  }\n\n  createTaskElement ({ id, title, description, status }) {\n    const $taskItem = document.createElement('div');\n    $taskItem.classList.add('task-item', status);\n    $taskItem.id = id;\n\n    const $checkboxBlock = document.createElement('label');\n    $checkboxBlock.className = 'checkbox-container';\n    const $checkbox = document.createElement('input');\n    $checkbox.setAttribute('type', 'checkbox');\n    status === filterButtonsClasses.completed && $checkbox.setAttribute('checked', true);\n    const $span = document.createElement('span');\n    $span.className = 'checkmark';\n    $checkboxBlock.appendChild($checkbox);\n    $checkboxBlock.appendChild($span);\n\n    const $textBlock = document.createElement('div');\n    $textBlock.classList.add('task-text');\n    $textBlock.innerHTML = `\n        <div class=\"task-text__title\">${capitalize(title)}</div>\n        <div class=\"task-text__description\">${capitalize(description)}</div>  \n      `;\n\n    const $actionsBlock = document.createElement('div');\n    $actionsBlock.className = 'task-actions';\n    $actionsBlock.innerHTML = `\n        <i class=\"fa fa-pencil task-actions__button task-actions__edit\"></i>\n        <i class=\"fa fa-trash task-actions__button task-actions__remove\"></i> \n      `;\n\n    $taskItem.appendChild($checkboxBlock);\n    $taskItem.appendChild($textBlock);\n    $taskItem.appendChild($actionsBlock);\n\n    return $taskItem;\n  }\n\n  renderTasks () {\n    const { status, type, text } = this.filtersState;\n    const tasks = this.tasks.filter(task => {\n      if (\n        (status !== 'all' && task.status !== status)\n        || (type !== 'all' && task.type !== type)\n        || (text && task.title.toLowerCase().indexOf(text.toLowerCase()) === -1\n          && task.description.toLowerCase().indexOf(text.toLowerCase()) === -1)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    this.$taskCount.innerHTML = `${countActiveTasks(tasks)} Tasks left`;\n\n    if (tasks.length) {\n      tasks.forEach(taskObj => {\n        const $taskItem = this.createTaskElement(taskObj);\n        this.$listBlock.appendChild($taskItem);\n      });\n    } else {\n      const $noTasks = document.createElement('h2');\n      $noTasks.innerHTML = 'You haven\\'t any tasks.';\n      $noTasks.className = 'no-tasks';\n\n      this.$listBlock.appendChild($noTasks);\n    }\n  }\n\n  onClickMainActions ({ target }) {\n    const isButton = target.classList.contains('button');\n\n    if (isButton) {\n      if (target.classList.contains(addButtonClass)) {\n        modal.open(this.onCreateTask);\n      }\n\n      if (target.classList.contains(finishAllButtonClass)) {\n        const finishedTasks = this.tasks.map(task => ({\n          ...task,\n          status: filterButtonsClasses.completed,\n        }));\n\n        localStorageService.set(finishedTasks);\n        this.tasks = finishedTasks;\n        this.$listBlock.innerHTML = '';\n        this.renderTasks();\n      }\n\n      if (target.classList.contains(removeAllButtonClass)) {\n        localStorageService.clear();\n        this.tasks = [];\n        this.$listBlock.innerHTML = '';\n        this.renderTasks();\n      }\n    }\n  }\n\n  onCreateTask (task) {\n    this.$listBlock.innerHTML = '';\n    this.tasks.push(task);\n    this.renderTasks();\n  }\n\n  onEditTask ($task) {\n    return task => {\n      const $newTask = this.createTaskElement(task);\n\n      this.tasks.push(task);\n      this.$listBlock.replaceChild($newTask, $task);\n    };\n  }\n\n  onClickFilterButtons ({ target }) {\n    const rerenderTasks = filterValue => {\n      this.filtersState.status = filterValue;\n      this.$listBlock.innerHTML = '';\n      this.renderTasks();\n    };\n    const isButton = target.classList.contains('button');\n    const isClickedActiveFilter = target.classList\n      .contains(this.filtersState.button);\n\n\n    if (isButton && !isClickedActiveFilter) {\n      const $prevActiveFilter = [].find.call(\n        target.parentElement.children,\n        elem => elem.classList.contains('active')\n      );\n      const filterValue = Object.keys(filterButtonsClasses)\n        .find(value => target.classList.contains(value));\n\n      $prevActiveFilter.classList.remove('active');\n      target.classList.add('active');\n\n      filterValue && rerenderTasks(filterValue);\n    }\n  }\n\n  onChangeType ({ target: { value } }) {\n    this.filtersState.type = value;\n    this.$listBlock.innerHTML = '';\n    this.renderTasks();\n  }\n\n  updateFilters (name, value) {\n    this.filtersState[name] = value;\n    this.$listBlock.innerHTML = '';\n    this.renderTasks();\n  }\n\n  onInput ({ target }) {\n    const value = target.value.trim();\n    this.updateFilters('text', value);\n  }\n\n  onTaskChange  ({ target })  {\n    const { tasks } = this;\n    const $task = target.parentElement.parentElement;\n    const taskId = $task.id;\n    const taskActions = {\n      remove: {\n        isCurrent: target.classList.contains('task-actions__remove'),\n        run: () => {\n          const newTasks = tasks.filter(({ id }) => id !== taskId);\n\n          localStorageService.set(newTasks);\n          this.tasks = newTasks;\n          this.$listBlock.removeChild($task);\n        }\n      },\n      edit: {\n        isCurrent: target.classList.contains('task-actions__edit'),\n        run: () => {\n          const taskObj = tasks.find(({ id }) => id === taskId);\n\n          modal.open(this.onEditTask($task), taskObj);\n        }\n      },\n      changeStatus: {\n        isCurrent: target.type === 'checkbox',\n        run: () => {\n          const isChecked = target.checked;\n          const taskIndex = tasks.findIndex(({ id }) => id === taskId);\n          const task = this.tasks[taskIndex];\n\n          if (isChecked) {\n            task.status = filterButtonsClasses.completed;\n            $task.classList.add(filterButtonsClasses.completed);\n            $task.classList.remove(filterButtonsClasses.opened);\n          } else {\n            task.status = filterButtonsClasses.opened;\n            $task.classList.remove(filterButtonsClasses.completed);\n            $task.classList.add(filterButtonsClasses.opened);\n          }\n\n          this.tasks[taskIndex] = task;\n          localStorageService.set(this.tasks);\n        }\n      },\n    };\n    const action = Object.values(taskActions).find(({ isCurrent }) => isCurrent);\n\n    if (action) {\n      action.run();\n    }\n  }\n}\n\n/* harmony default export */ var main = (main_TaskList);\n\n// EXTERNAL MODULE: ./src/styles/index.scss\nvar styles = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const tasks = localStorageService.get();\n\n  new main(tasks);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);